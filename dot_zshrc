printf '\33c\e[3J' ## hides last login time from Terminal!

###############################################################################
# ZSH Plugins
###############################################################################
# enable autosuggestions (requires https://formulae.brew.sh/formula/zsh-autosuggestions)
source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh

# enable zsh completen (requires https://formulae.brew.sh/formula/zsh-completions)
if type brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh-completions:$FPATH
  autoload -Uz compinit
  compinit
  zstyle ':completion:*' menu select
fi

###############################################################################
# Aliases
###############################################################################
# Use eza for ls
alias eza='eza -aa --header --long --classify --git --group-directories-first --icons --accessed --modified --created --group'
# forward ls to eza
alias ls=eza
alias ll=eza
# use old ls with lsa
alias lsa='command ls -lAFh'
alias R='R --no-save --no-restore-data'
alias bbd='brew bundle dump --file=~/.local/share/chezmoi/Brewfile --force --describe'
alias rm=trash # using node’s global trash-cli
alias trail='bat<<<${(F)path}'
alias p='cd ~/projects/'
alias bun-vite="take ~/Downloads/bun-vite-$(date -u '+%Y-%m-%d-%H-%M') && bun create vite . --template react-swc-ts && echo -e 'Run\nbun run dev\nin VS Code’s terminal' > delete-me.txt && bun install && code . delete-me.txt"
alias ghcs='gh copilot suggest'
alias ghce='gh copilot explain'
alias python=/usr/local/bin/python3 # python (version 2) is not needed anymore alias python to homebrew's python3

###############################################################################
# Functions
###############################################################################
# matching with oh-my-zsh’s take: https://github.com/ohmyzsh/ohmyzsh/blob/9e967b4eccbe26701315860a3b0bad01fde725c8/lib/functions.zsh#L39
function take() {
  mkdir -p $@ && cd ${@:$#}
}

# add gi to query toptal gitignore api
# todo make this an alfred response
function gi() { curl -sLw "\n" https://www.toptal.com/developers/gitignore/api/$@ ;}

###############################################################################
# Utilities
###############################################################################

# Syntax highlighting for man pages using bat
# https://github.com/sharkdp/bat#man
export MANPAGER="sh -c 'col -bx | bat -l man -p'"

# This is also used by R and radian to set response language
export LANG=en_US.UTF-8

export EDITOR="code -w"

# hide usernmae and hostname
export PS1="%~ $ "

# Expose REMOVE_BG_API_KEY using 1password cli - prepend removebg witih op run --
# instead of removebg example.jpg use op run -- removebg example.jpg
export REMOVE_BG_API_KEY="op://Personal/Kaleido/API-removebg"

# Allow interactive comments (#)
setopt interactive_comments


###############################################################################
# Last Load
###############################################################################
# Syntax Highlighting (https://formulae.brew.sh/formula/zsh-syntax-highlighting)
source $(brew --prefix)/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# History substring search (https://formulae.brew.sh/formula/zsh-history-substring-search)
# this needs to come after syntax highlighting: https://github.com/zsh-users/zsh-history-substring-search#usage
source $(brew --prefix)/share/zsh-history-substring-search/zsh-history-substring-search.zsh
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down


parse_git_branch() {
    git branch 2> /dev/null | sed -n -e 's/^\* \(.*\)/[\1]/p'
}
# Set zsh option for prompt substitution
setopt PROMPT_SUBST
## current-folder[current-branch] $
export PROMPT='%F{cyan}%.%f%F{green}$(parse_git_branch)%f %F{normal}$%f '

